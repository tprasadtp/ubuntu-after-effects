on:
  push:
    branches:
      - "**"
    tags:
      - 'v*'
  pull_request:
name: build
jobs:
  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Shellcheck
        run: shellcheck after-effects

  ubuntu:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        release: ["focal", "jammy", "mantic"]
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Ubuntu ${{ matrix.release }}
        run: ./scripts/docker-test --build --trace --distro ubuntu --release "${{ matrix.release }}"

  debian:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        release: ["bullseye", "bookworm"]
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Debian ${{ matrix.release }}
        run: ./scripts/docker-test --build --trace --distro debian --release "${{ matrix.release }}"

  ubuntu-arm:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        release: ["focal", "jammy", "mantic"]
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Test on ARM64 ${{ matrix.release }}
        run: ./scripts/docker-test --build --trace --distro arm64v8/ubuntu --release "${{ matrix.release }}"

  debian-arm:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        release: ["bullseye", "bookworm"]
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Test on ARM64 ${{ matrix.release }}
        run: ./scripts/docker-test --build --trace --distro arm64v8/debian --release "${{ matrix.release }}"

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs:
      - shellcheck
      - ubuntu
      - debian
      - ubuntu-arm
      - debian-arm
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Version
        run: echo $VERSION
      - name: Create Release
        run: |
          gh release create \
            --title ${{ steps.get_version.outputs.VERSION }} \
            ${{ steps.get_version.outputs.VERSION }} \
            after-effects
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
